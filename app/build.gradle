apply plugin: 'com.android.application'
android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    useLibrary 'org.apache.http.legacy'


    read
    defaultConfig {
        applicationId "com.delta.smt"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner rootProject.ext.dependencies["androidJUnitRunner"]
    }
    buildTypes {


        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "USE_CANARY", "true"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "boolean", "USE_CANARY", "false"
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

//    productFlavors {
//        mock {
//            applicationIdSuffix = ".mock"
//        }
//        prod {
//            applicationIdSuffix = ".prod"
//        }
//    }
// Remove mockRelease as it's not needed.
//    android.variantFilter { variant ->
//        if (variant.buildType.name.equals('release')
//                && variant.getFlavors().get(0).name.equals('mock')) {
//            variant.setIgnore(true);
//        }
//    }

    lintOptions {
        disable 'InvalidPackage'
        disable "ResourceType"
        abortOnError false
    }
    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    //testCompile rootProject.ext.dependencies["junit"]
   // compile rootProject.ext.dependencies["javax.annotation"]
    debugCompile rootProject.ext.dependencies["canary-debug"]
    releaseCompile rootProject.ext.dependencies["canary-release"]
    testCompile rootProject.ext.dependencies["canary-release"]
    compile project(':ameslibs')
    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]
    //view
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
    // test
    testCompile rootProject.ext.dependencies["junit"]
    androidTestCompile(rootProject.ext.dependencies["espresso-core"],{
        exclude group: 'com.android.support', module: 'support-annotations'
    })

}

class ApkDistPlugin implements Plugin<Project> {

    @Override
    void apply(Project project) {
        project.task('apkdist') << {
            println 'hello, world!'
        }
    }
}

apply plugin: ApkDistPlugin